#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP="89.111.170.219"
SERVER_USER="root"
SERVER_PASSWORD="FJKH8wQwpBOobw1T"
PROJECT_NAME="medical-center"
REMOTE_DIR="/var/www/medical-center"

echo -e "${GREEN}üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ VPS —Å–µ—Ä–≤–µ—Ä...${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è SSH –∫–æ–º–∞–Ω–¥
sshpass_auto() {
    sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$SERVER_USER@$SERVER_IP" "$1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è SCP –∫–æ–º–∞–Ω–¥
scp_auto() {
    sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r "$1" "$SERVER_USER@$SERVER_IP:$2"
}

echo -e "${YELLOW}üì¶ –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç...${NC}"
npm run build

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"

echo -e "${YELLOW}üîß –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –¥–µ–ø–ª–æ—è...${NC}"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –¥–µ–ø–ª–æ—è
mkdir -p deploy_temp
cp -r .next deploy_temp/
cp -r public deploy_temp/
cp package.json deploy_temp/
cp package-lock.json deploy_temp/
cp ecosystem.config.js deploy_temp/
cp next.config.ts deploy_temp/
cp tailwind.config.ts deploy_temp/
cp postcss.config.mjs deploy_temp/
cp tsconfig.json deploy_temp/

echo -e "${YELLOW}üåê –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ...${NC}"

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
sshpass_auto "mkdir -p $REMOTE_DIR"

echo -e "${YELLOW}üì§ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä...${NC}"
scp_auto "deploy_temp/*" "$REMOTE_DIR/"

echo -e "${YELLOW}üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
sshpass_auto "cd $REMOTE_DIR && npm ci --only=production"

echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ PM2...${NC}"
sshpass_auto "cd $REMOTE_DIR && pm2 delete medical-center-app 2>/dev/null || true"
sshpass_auto "cd $REMOTE_DIR && pm2 start ecosystem.config.js --env production"

echo -e "${YELLOW}üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx...${NC}"
sshpass_auto "apt update -y"
sshpass_auto "apt install -y nginx"

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
NGINX_CONFIG="server {
    listen 80;
    server_name $SERVER_IP;
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
}"

echo "$NGINX_CONFIG" | sshpass_auto "cat > /etc/nginx/sites-available/medical-center"
sshpass_auto "ln -sf /etc/nginx/sites-available/medical-center /etc/nginx/sites-enabled/"
sshpass_auto "rm -f /etc/nginx/sites-enabled/default"
sshpass_auto "systemctl restart nginx"

echo -e "${YELLOW}üîí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall...${NC}"
sshpass_auto "ufw allow 22"
sshpass_auto "ufw allow 80"
sshpass_auto "ufw allow 443"
sshpass_auto "ufw --force enable"

echo -e "${YELLOW}üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...${NC}"
rm -rf deploy_temp

echo -e "${GREEN}üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
echo -e "${GREEN}üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$SERVER_IP${NC}"
echo -e "${GREEN}üìä PM2 —Å—Ç–∞—Ç—É—Å:${NC}"
sshpass_auto "pm2 status"

echo -e "${GREEN}‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.${NC}"
